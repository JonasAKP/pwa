{"remainingRequest":"C:\\Program Files (x86)\\nooO\\pwa\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Program Files (x86)\\nooO\\pwa\\src\\views\\user\\Login.vue?vue&type=style&index=0&id=1ecd471f&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Program Files (x86)\\nooO\\pwa\\src\\views\\user\\Login.vue","mtime":1619089664956},{"path":"C:\\Program Files (x86)\\nooO\\pwa\\node_modules\\css-loader\\dist\\cjs.js","mtime":1619084022270},{"path":"C:\\Program Files (x86)\\nooO\\pwa\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1619084049778},{"path":"C:\\Program Files (x86)\\nooO\\pwa\\node_modules\\postcss-loader\\src\\index.js","mtime":1619084035851},{"path":"C:\\Program Files (x86)\\nooO\\pwa\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1619084044961},{"path":"C:\\Program Files (x86)\\nooO\\pwa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619084016038},{"path":"C:\\Program Files (x86)\\nooO\\pwa\\node_modules\\vue-loader\\lib\\index.js","mtime":1619084049773}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI2Vycm9yTWVzc2FnZSB7DQogIGNvbG9yOiByZWQ7DQp9DQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n  <v-app>\r\n    <v-container>\r\n      <v-col cols=\"12\">\r\n        <v-card style=\"padding: 15px\">\r\n          <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n            <v-col>\r\n              <v-text-field\r\n                v-model=\"email\"\r\n                :rules=\"emailRules\"\r\n                label=\"E-mail\"\r\n                required\r\n              ></v-text-field>\r\n            </v-col>\r\n            <v-col>\r\n              <v-text-field\r\n                v-model=\"password\"\r\n                :counter=\"8\"\r\n                :rules=\"passwordRules\"\r\n                label=\"Password\"\r\n                required\r\n              ></v-text-field>\r\n            </v-col>\r\n            <v-spacer></v-spacer>\r\n            <v-row style=\"height: 60px; margin: 11px\">\r\n              <v-btn\r\n                :disabled=\"!valid\"\r\n                color=\"success\"\r\n                class=\"mr-4\"\r\n                @click=\"validate\"\r\n              >\r\n                Login\r\n              </v-btn>\r\n\r\n              <v-btn to=\"/Home\" color=\"error\" class=\"mr-4\"> Back </v-btn>\r\n              <v-spacer></v-spacer>\r\n              <!-- {{ test }} -->\r\n              <v-btn to=\"/Register\" class=\"mr-4\">Register</v-btn>\r\n            </v-row>\r\n          </v-form>\r\n        </v-card>\r\n      </v-col>\r\n    </v-container>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data: () => ({\r\n    valid: true,\r\n\r\n   // test: \"\",\r\n    email: \"\",\r\n    emailRules: [\r\n      (v) => !!v || \"E-mail is required\",\r\n      (v) => /.+@.+\\..+/.test(v) || \"Wrong E-mail\",\r\n    ],\r\n    checkbox: false,\r\n\r\n    password: \"\",\r\n    passwordRules: [\r\n      (v) => !!v || \"Password is required\",\r\n      (v) => (v && v.length <= 8) || \"password is incorrect, please try again\",\r\n    ],\r\n  }),\r\n\r\n  methods: {\r\n    validate() {\r\n      if (this.$refs.form.validate()) {\r\n        this.loginUser();\r\n        if(sessionStorage.getItem(\"user_token\") && sessionStorage.getItem(\"user_email\") )\r\n        {\r\n         // console.log(sessionStorage.getItem(\"user_token\") + sessionStorage.getItem(\"user_email\"))\r\n          alert(sessionStorage.getItem(\"user_email\") + \" Has been logged in\")\r\n          this.$router.push(\"/\");\r\n        }\r\n        else\r\n        {\r\n          alert(\"Something went wrong\");\r\n        }\r\n       \r\n      }\r\n    },\r\n\r\n    loginUser() {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: this.email,\r\n          password: this.password,\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://rest-api-pwa.herokuapp.com/api/users/login\",\r\n        requestOptions\r\n      ).then((response) =>\r\n        response\r\n          .json()\r\n          .then((data) => ({\r\n            data: data,\r\n            status: response.status,\r\n          }))\r\n          .then((response) => {\r\n            if (response.data) {\r\n              sessionStorage.setItem(\r\n                \"user_token\",\r\n                JSON.stringify(response.data.data.token)\r\n              );\r\n              sessionStorage.setItem(\"user_email\", this.email);\r\n\r\n             // this.test = \"token: \" + sessionStorage.getItem(\"user_token\") + \"\\n\" + \"user :\" + sessionStorage.getItem(\"user_email\") ;\r\n              \r\n            } else {\r\n              alert(\r\n                \"Server returned \" +\r\n                  response.status +\r\n                  \" : \" +\r\n                  response.statusText\r\n              );\r\n            }\r\n          })\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#errorMessage {\r\n  color: red;\r\n}\r\n</style>\r\n"]}]}